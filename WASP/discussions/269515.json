[
  {
    "Id": "659816",
    "ThreadId": "269515",
    "Html": "\r\n<p>Wondering if anyone can help us (noobs)...&nbsp;</p>\r\n<p>We just starting to use PowerShell with the WASP plug-in to automate a repetitive task in a Windows GUI app. &nbsp; The script basically needs to:&nbsp; &nbsp;</p>\r\n<ol>\r\n<li>Open the program with a data file; &nbsp;&nbsp; </li><li>Fire off a command that performs a data file stress-test (this is a child-window); &nbsp;&nbsp;\r\n</li><li>**Check the test result: Pass / Fail (this is a child-window of the child-window);\r\n</li><li>Write the result to the log file; &nbsp;&nbsp; </li><li>Close the program; &nbsp;&nbsp; </li><li>Repeat for all files in a specified directory.&nbsp; </li></ol>\r\n<p>Our script does just about all that except &quot;3) Check Test result&quot;.</p>\r\n<p>&nbsp;We haven&rsquo;t worked out how to distinguish between the two different Pass / Fail dialogs. &nbsp;That is, once the test has completed, the program will display the result in one of two possible pop-up child windows:&nbsp; &nbsp;\r\n<br>\r\n- A successful test results in a popup window with title &quot;Information&quot; and an &quot;OK&quot; button; or&nbsp; &nbsp;\r\n<br>\r\n- A failed test results in a popup window with title &quot;Delta AT&quot; and an &quot;Stop&quot; button.</p>\r\n<p><br>\r\nAre there any PowerShell commandlets that can get the properties of a popup window, such as the window title, etc, and branch accordingly?<br>\r\nTIA</p>\r\n<p>Paul</p>\r\n<p><br>\r\nOur script so far:<br>\r\n<span style=\"color:#008000\">#------------------------</span></p>\r\n<p>set-executionpolicy Unrestricted<br>\r\nImport-Module C:/install/WASP/wasp.dll&nbsp;<br>\r\nClear-Host</p>\r\n<p>$tdxpath = &quot;C:\\xl-tdx-20110802\\&quot;<br>\r\n$testLog = &quot;C:\\xl-tdx-20110802\\stresstest.log&quot;&nbsp;<br>\r\n$filename = &quot;success.tdxex&quot;&nbsp;</p>\r\n<p><span style=\"color:#008000\">## Step 1: FireUp the Authoring Tool</span><br>\r\nWrite-Host &quot;Loading &quot; $filename<br>\r\nStart-Process C:\\xl-at-math\\DeltaAT.exe ($tdxpath &#43; $filename) -NoNewWindow <br>\r\nStart-Sleep -s 2</p>\r\n<p><span style=\"color:#008000\">## Step 2: Activate Math Tool, and exectute Stress Test (CTR-ALT-R)\r\n</span><br>\r\nSelect-Window DeltaAT* | Set-WindowActive | Send-Keys &quot;^%r&quot;&nbsp;</p>\r\n<p><span style=\"color:#008000\"># &nbsp; &nbsp; &nbsp; 2a: Click Enter to start the test</span><br>\r\nWrite-Host &quot;Starting Stress test...&quot;<br>\r\nSelect-Window DeltaAT* | Set-WindowActive | Send-Keys &quot;{ENTER}&quot;&nbsp;</p>\r\n<p><span style=\"color:#008000\"># &nbsp; &nbsp; &nbsp; 2b: Wait 10 sec for test to complete. Would be better to check for completion.</span><br>\r\nStart-Sleep -s 10<br>\r\nWrite-Host &quot;Testing Complete&quot;</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"color:#008000\">## Step 3: Conditional statement: (**This is where we need help**)\r\n</span><br>\r\n<span style=\"color:#008000\">## A successful test will have a dialog box with title &quot;<em>Information</em>&quot; and button labeled &quot;<em>OK</em>&quot;</span><br>\r\n<span style=\"color:#008000\">## A failed test will have&nbsp;a dialog box with title &quot;<em>Delta AT</em>&quot; and button labeled &quot;<em>Stop</em>&quot;</span></p>\r\n<p>if (Select-Window DeltaAT* | Select -Last 1 | Remove-Window -Passthru | Select-childwindow | select-control -title &quot;OK&quot;)<br>\r\n{ &nbsp;&nbsp;<br>\r\n<span style=\"white-space:pre\"></span>Write-Host &quot;Stress test passed&quot;&nbsp; &nbsp;\r\n<br>\r\n<span style=\"white-space:pre\"></span>$resultMsg = &quot;PASSED: &quot;&nbsp; &nbsp; <br>\r\n<span style=\"white-space:pre\"></span>#Select-Window DeltaAT* | Select -Last 1 | Remove-Window -Passthru | Select-childwindow | select-control -title &quot;OK&quot; &nbsp;-recurse | Send-Click<br>\r\n} <br>\r\nelse <br>\r\n{&nbsp; &nbsp; <br>\r\n<span style=\"white-space:pre\"></span>Write-Host &quot;Stress test failed&quot; &nbsp; &nbsp;&nbsp; &nbsp;\r\n<br>\r\n<span style=\"white-space:pre\"></span>$resultMsg = &quot;FAILED: &quot;&nbsp; &nbsp; <br>\r\n<span style=\"white-space:pre\"></span>#Select-Window DeltaAT* | Select -Last 1 | Remove-Window -Passthru | Select-childwindow | select-control -title &quot;Stop&quot; &nbsp;-recurse | Send-Click\r\n<br>\r\n}</p>\r\n<p><span style=\"color:#008000\"># Step 4: Write the result</span><br>\r\n$output = &quot;$(Get-Date -f o), &quot; &#43; $resultMsg &#43; $filename $output | out-file $testLog -Append</p>\r\n<p><span style=\"color:#008000\"># Step 5:</span><br>\r\n<span style=\"color:#008000\"># &nbsp; &nbsp; &nbsp;5a: close Dialog</span><br>\r\nStart-Sleep -s 1<br>\r\nWrite-Host &quot;Closing &quot; &#43; $resultMsg &#43; &quot; Dialog&quot;<br>\r\nSelect-Window DeltaAT* | Set-WindowActive | Send-Keys &quot;{ENTER}&quot;<br>\r\n<br>\r\n</p>\r\n<p><span style=\"color:#008000\"># &nbsp; &nbsp; &nbsp;5b: Close &quot;Variable Stress Test&quot; window&quot;</span><br>\r\nWrite-Host &quot;Closing Variable Stress Test Dialog&quot;<br>\r\nSelect-Window DeltaAT* | Select -Last 1 | Send-Keys &quot;%{F4}&quot;<br>\r\n<br>\r\n</p>\r\n<p><span style=\"color:#008000\"># &nbsp; &nbsp; &nbsp;5c: Close &quot;Delta AT&quot; window</span><br>\r\nWrite-Host &quot;Closing Delta AT window&quot;<br>\r\nSelect-Window DeltaAT* | Select -Last 1 | Send-Keys &quot;%{F4}&quot;<br>\r\n<span style=\"color:#008000\">#------------------------</span></p>\r\n",
    "PostedDate": "2011-08-17T23:56:30.987-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]